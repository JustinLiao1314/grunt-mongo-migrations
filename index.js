// Generated by CoffeeScript 1.6.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

module.exports = function(grunt) {
  var getName, migrate;
  migrate = function() {
    var GruntMigrate, Migrate, _ref;
    require('coffee-errors');
    Migrate = require('./migrate');
    grunt.config.requires('migrations.path');
    grunt.config.requires('migrations.mongo');
    GruntMigrate = (function(_super) {
      __extends(GruntMigrate, _super);

      function GruntMigrate() {
        _ref = GruntMigrate.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      GruntMigrate.prototype.log = function() {
        var _ref1;
        return (_ref1 = grunt.log).ok.apply(_ref1, arguments);
      };

      GruntMigrate.prototype.error = function() {
        var _ref1;
        return (_ref1 = grunt.fail).fatal.apply(_ref1, arguments);
      };

      return GruntMigrate;

    })(Migrate);
    return new GruntMigrate(grunt.config('migrations'));
  };
  getName = function() {
    var name;
    name = grunt.cli.options.name;
    if (name == null) {
      return grunt.fail.fatal("Migration name must be specified with `" + "--name".bold + "`");
    }
    return name;
  };
  grunt.registerTask('migrate:generate', 'Create a new migration', function() {
    var done;
    done = this.async();
    return migrate().generate(getName(), function(err, filename) {
      if (err == null) {
        grunt.log.ok("Created `" + filename.blue + "`");
      }
      return done(err);
    });
  });
  grunt.registerTask('migrate:one', 'Run a migration. e.g. `grunt migrate:one --name 20120215233505_split_user_name`', function() {
    var done;
    done = this.async();
    return migrate().one(getName(), function(err) {
      if (err == null) {
        grunt.log.ok("Migrated `" + name.blue + "`");
      }
      return done();
    });
  });
  grunt.registerTask('migrate:pending', 'List all pending migrations', function() {
    var done;
    done = this.async();
    migrate = migrate();
    return migrate.pending(function(err, pending) {
      if (err == null) {
        if (pending.length === 0) {
          grunt.log.ok('No pending migrations');
        }
        pending.forEach(function(name) {
          return grunt.log.ok(("`" + name.blue + "` is pending ") + (migrate.get(name).requiresDowntime && "(requires downtime)".red.bold || ''));
        });
      }
      return done(err);
    });
  });
  return grunt.registerTask('migrate:all', 'Run all pending migrations', function() {
    var done;
    done = this.async();
    return migrate().all(function(err) {
      if (err == null) {
        grunt.log.ok('Finished migrations');
      }
      return done(err);
    });
  });
};
